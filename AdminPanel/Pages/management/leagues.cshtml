@page
@model AdminPanel.Pages.management.leaguesModel

<style>
    .dropdown-toggle::after {
        display: none !important;
    }
</style>
<div class="container-fluid">
    <div class="row mb-2 pt-4">
        <div class="col-sm-6">
            <h4><span id="pageTitleFilter"></span> Leagues</h4>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table w-100" id="league_table">
                    <thead class="no-wrap">
                        <tr>
                            <th>Id</th>
                            <th>
                                <div class="datatableTdTitleTextWrapper">Icon</div>
                            </th>
                            <th>
                                <div class="datatableTdTitleTextWrapper">Name</div>
                            </th>
                            <th>
                                <div class="datatableTdTitleTextWrapper">Range</div>
                            </th>
                            <th>
                                <div class="datatableTdTitleTextWrapper">Sub Leagues</div>
                            </th>
                            <th>
                                <div class="datatableTdTextWrapper">Status</div>
                            </th>
                            <th>
                                <div class="datatableTdTextWrapper">
                                    Created UTC
                                </div>
                            </th>
                            <th>
                                <div class="datatableTdTextWrapper">
                                    Action
                                </div>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<input type="hidden" id="statusType" value="0" />


@*SubLeagues Detail modal*@
<div class="modal fade" id="subleague_detail_modal" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-overlay-title">Update League</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="subLeaguesDiv">
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal-overlay" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-overlay-title">Subscription</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="dataForm">
                    <input type="hidden" id="bodyId" name="id" />
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="categoryname">League Name <span class="text-danger">*</span> <code>max 50 characters</code></label>
                                <input type="text" class="form-control rounded-0" name="categoryname" id="leaguename" placeholder="enter name..." maxlength="50">
                                <span class="text-danger" id="categoryname-error"></span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="categoryname">Min Range</label>
                                <input type="number" class="form-control rounded-0" value="0" min="0" onkeypress="return event.charCode != 45" maxlength="8" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" name="minrange" id="minrange" placeholder="enter range...">
                                <span class="text-danger" id="categoryname-error"></span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="categoryname">Max Range</label>
                                <input type="number" class="form-control rounded-0" value="0" min="0" onkeypress="return event.charCode != 45" maxlength="8" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" name="maxrange" id="maxrange" placeholder="enter range...">
                                <span class="text-danger" id="categoryname-error"></span>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="bodyFile">File Url</label>
                                <input type="file" class="form-control" id="file" name="file" accept="image/*">
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="d-none" id="packageimage"></div>
            <input hidden data-counter="package" type="number" name="name" id="packageval" value="1" />
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-success" onclick="UpdateLeague(this)">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(function() {

        var columns = [
            {
                "data": "data.id",
                "name": "data.id"
            },
            {
                "data": "data.icon",
                "name": "data.icon",
                "render": function(data, row) {

                    return '<img class="img-circle" width="35" height="35" src= "' + data + '">';
                }
            },
            {
                "data": "data.name",
                "name": "data.name",
                "render": function(data, row) {

                    return `<div class="datatableTdTextWrapper">${data}</div>`;
                }
            },
            {
                "data": "data.minRange",
                "name": "data.minRange",
                "render": function(data, row, payload) {

                    return '<div class="datatableTdTextWrapper"><span>' + data + '</span>-<span>' + payload.data.maxRange + '</span></div>'
                }
            },
            {
                "data": "data.id",
                "name": "data.id",
                "render": function(data, row) {

                    return `<a  href="/management/subleagues/${data}"  class="btn btn-sm btn-outline-primary cursor-pointer subLeagues" data-leagueId="${data}"><i class="fas fa-eye"></i></a>`;
                }
            },
            {
                "data": "data.deleted",
                "name": "data.deleted",
                "render": function(data, row) {
                    if (data == true)
                        return '<span class="badge badge-danger">Blocked</span>';
                    else
                        return '<span class="badge badge-success">Active</span>';
                }
            },
            {
                "data": "createdAt",
                "name": "createdAt",
                "render": function(data, row) {
                    return '<div class="datatableTdTextWrapper">' + data + '</div>'
                }
            },

            {
                "data": "data.deleted",
                "name": "data.deleted",
                "render": function(data, row, payload) {
                    if (data == false) {
                        return `<a class="btn btn-sm btn-outline-primary ml-2" id="editLeague" data-leagueId=${payload.data.id} onclick="showleague(${payload.data.id})"><i class="fas fa-edit"></i></a>
                           <a class="btn btn-sm btn-outline-danger ml-2" id="softDeleteUserBtn"><i class="fas fa-user-slash"></i></a>`;
                    }
                    else if (data == true) {
                        return `<a class="dropdown-item cursor-pointer" id="softDeleteUserBtn" title="Active"><i class="fas fa-user-check"></i> Active</a>`;
                    }
                }
            }
        ];
        var order = [[6, "desc"]];
        var columnDefs = [{
            "targets": [0],
            "visible": false,
            "searchable": false
        }];
        //Init Datatable
        initDatatable('#league_table', '/manage/getPaginationData/5', '#statusType', '#pageTitleFilter', columns, order, columnDefs);
    });

    $('#league_table tbody').on('click', '[id*=editLeague]', function() {
        var leagueId = $(this).attr("data-leagueId");
        loadHttpRequest("GET", `/manage/getLeagueById?leagueId=${leagueId}`, getMemberDetailCallBackHandler);
    });

    //handler ajax callback
    function getMemberDetailCallBackHandler(agendas) {
        //$("#subtask_detail").html('');
        var categoryId = $(this).attr("data-leagueId");
        $("#bodyId").val(agendas.id);
        if (agendas != null) {
            $("#leaguename").val(agendas.name);
            $("#minrange").val(agendas.minRange);
            $("#maxrange").val(agendas.maxRange);
        }
        else {
            //$("#subtask_detail").append(`<div class="col-12 my-3"><h5>No Task found</h5></div>`);
        }

        $("#modal-overlay").modal('show');
    }
    //    function showleague(leagueId) {
    //    var categoryId = $(this).attr("data-categoryId");
    //    $("#bodyId").val(leagueId);
    //    alert($("#bodyId").val());
    //    $.ajax({
    //        type: 'GET',
    //        url: '/manage/getLeague?leagueId=' + leagueId,
    //        async: true,
    //        processData: false,
    //        contentType: false,
    //        success: function(res) {
    //            alert(res.name);
    //            $("#leaguename").val(res.name);
    //        },
    //        error: function(error) {
    //            return error;
    //        },

    //    });
    //    loadHttpRequest("GET", `/manage/getcouchingcategory?id=${categoryId}`, getMemberDetailCallBackHandler);
    //    Change Modal Title
    //    $("#modal-overlay-title").html("Update League");

    //    Show Modal
    //    $("#modal-overlay").modal("toggle");
    //}
    function UpdateLeague() {
        var filevalue = $("#file").val();
        var Id = $("#bodyId").val();
        if (filevalue == '') {
            var executeHttpRequest = true;
            var name = $("#leaguename").val();
            var minrange = $("#minrange").val();
            var maxrange = $('#maxrange').val();
            //check field name
            if (CheckNullUndefined(name.trim())) {
                Toast.fire({ icon: 'warning', title: '' });
                executeHttpRequest = false;
            }
            if (executeHttpRequest == true) {
                var data = {};
                data.leagueId = Id;
                data.leagueName = name;
                data.leagueIcon = null;
                data.minRange = minrange;
                data.maxRange = maxrange;

                loadHttpRequest("PUT", "/manage/updateLeague", updateLeagueCallback, JSON.stringify(data));

            }
        }
        else {
            var executeHttpRequest = true;
            var name = $("#leaguename").val();
            var minrange = $("#minrange").val();
            var maxrange = $('#maxrange').val();
            var url = $("#file")[0].files[0];
            var file = $("#file").val();
            var ext = file.substring(file.lastIndexOf('.') + 1, file.length);
            var formData = new FormData();

            formData.append("file", url);
            console.log(formData);
            //check field name
            if (CheckNullUndefined(name.trim())) {
                Toast.fire({ icon: 'warning', title: '' });
                executeHttpRequest = false;
            }
            if (CheckNullUndefined(url)) {
                Toast.fire({ icon: 'warning', title: '' });
                executeHttpRequest = false;
            }
            //if (ext != 'jpeg' || ext != 'jpg' || ext != 'png' || ext != 'PNG' || ext != 'JPG' || ext != 'JPEG' || ext != 'tiff' || ext != 'eps' || ext != 'raw' || ext != 'TIFF' || ext != 'EPS' || ext != 'RAW') {
            //    Toast.fire({ icon: 'warning', title: 'You can only upload Image' });
            //    executeHttpRequest = false;
            //}
            if (executeHttpRequest == true) {
                $.ajax({
                    type: "POST",
                    url: "/manage/uploadFile",
                    dataType: "json",
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function(res) {
                        //var data = JSON.parse(JSON.stringify(data));
                        //alert(data.thumbnail);
                        var data = {};
                        data.leagueId = Id;
                        data.leagueName = name;
                        data.leagueIcon = res;
                        data.minRange = minrange;
                        data.maxRange = maxrange;

                        loadHttpRequest("PUT", "/manage/updateLeague", updateLeagueCallback, JSON.stringify(data));
                    },
                    error: function(error) {
                        toastr.error("Error", error.message);
                        return error;
                    },
                });

            }
        }
    }

            function updateLeagueCallback(response) {
        Swal.fire({
            title: 'Successfull',
            text: 'League Update Successfully.',
            imageUrl: '/Images/Group 227317.png',
            imageAlt: 'Custom image',
            timer: 1500,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function() {
            $("#modal-overlay").modal('hide');
            table.draw();
        })
    }

    //Soft Delete Feature Handler
    $('#league_table tbody').on('click', '[id*=softDeleteUserBtn]', function() {
        //Get Row Data
        var data = table.row($(this).parents('tr')).data();
        var title, confirmButtonText;

        var statusCheck = data.id;

        if (statusCheck) {
            title = 'Are you sure, you want to unblock this league?';
            confirmButtonText = 'Yes, Unblock it!';
        }
        else {
            title = 'Are you sure, you want to block this league?';
            confirmButtonText = 'Yes, Block it!';
        }

        swal.fire({
            title: title,
            icon: 'warning',
            allowOutsideClick: false,
            showCloseButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: confirmButtonText
        }).then((result) => {
            if (result.isConfirmed) {

                if (statusCheck) {
                    statusCheck = 2;
                    //Ajax Request
                    loadHttpRequest("GET", "/manage/softDeleteUser?id=" + data.businessId + "&isDeleted=" + statusCheck + "&reason=" + null + "&loginRole=" + data.loginRole, softDeleteCallback);
                }
                else {
                    statusCheck = 1;
                    rejectRequest(data.businessId, statusCheck, data.loginRole);
                }
            }
        });
    });

    async function rejectRequest(id, status, loginRole) {
        await Swal.fire({
            input: 'textarea',
            inputLabel: 'Reason',
            inputPlaceholder: 'Type your reason here...',
            inputAttributes: {
                'aria-label': 'Type your reason here'
            },
            showCancelButton: true,
            //preConfirm: () => {
            //    if (someLogic()) {
            //      return false; // Prevent confirmed
            //    }
            //},
        }).then((result) => {
            if (result.isConfirmed) {
                if (result.value) {
                    //Ajax Request
                    loadHttpRequest("GET", "/manage/softDeleteUser?id=" + id + "&isDeleted=" + status + "&reason=" + result.value + "&loginRole=" + loginRole, softDeleteCallback);
                } else {
                    toastr.error("Please provide reason to proceed.");
                    return false;
                }
            }
        });
    }

    function softDeleteCallback(response) {
        Swal.fire({
            title: 'Successfull',
            text: 'Status updated.',
            imageUrl: '/Images/Group 227317.png',
            imageAlt: 'Custom image',
            timer: 1500,
            showCancelButton: false,
            showConfirmButton: false
        }).then(function() {
            table.draw();
        })
    }

    $('#organization_table tbody').on('click', '[class*=organization_detail]', function() {
        var detail = $(this).attr("data-detail");
        $('#organization_detail').text(detail);
        $('#organization_detail_modal').modal('show');
    });


    //Block Reason Handler
    $('#organization_table tbody').on('click', '[id*=rejection_reason]', function() {
        //Get Row Data
        var data = $(this).attr("data-detail");
        $('#reason').html(data);
        $('#rejection_reason_modal').modal('show');
    });

    //Branch Detail
    $('#organization_table tbody').on('click', '[class*=branchDetail]', function() {
        var businessId = $(this).attr("data-businessId");
        loadHttpRequest("GET", `/manage/getBranchDetail?organizationId=${businessId}`, getBranchDetailCallBackHandler);
    });

    //handler ajax callback
    function getBranchDetailCallBackHandler(branches) {
        $("#branch_detail").html('');

        if (branches != null && branches.length > 0) {

            branches.forEach(function(branch) {
                var status = '';
                if (branch.branchStatus == true)
                    status = '<span class="badge btn-danger">Blocked</span>';
                else
                    status = '<span class="badge btn-success">Active</span>';

                $("#branch_detail").append(`<div class="col-md-6 col-12 mt-2">
                           <div class="user-block" style="float: none!important;">
                                <img class="img-circle" src = "${branch.branchLogo}">
                                <div><a> ${branch.branchName}</a></div>
                                <div><a> ${branch.branchEmail}</a></div>
                                <div><i class="far fa-location"></i>${branch.branchAddress}</div>
                                ${status}
                           </div>
                    </div>`);
            });
        }
        else {
            $("#branch_detail").append(`<div class="col-12 my-3"><hr><h5>No branch found</h5></div>`);
        }

        $("#branch_detail_modal").modal('show');
    }

</script>


///

