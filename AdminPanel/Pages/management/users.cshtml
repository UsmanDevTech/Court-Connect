@page
@model AdminPanel.Pages.management.usersModel

<style>
    .dropdown-toggle::after {
        display: none !important;
    }

    .font-bold {
        font-weight: bold;
    }
</style>
<div class="container-fluid">
    <h4><span id="pageTitleFilter"></span> Users</h4>
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table w-100" id="user_table">
                    <thead class="no-wrap">
                        <tr>
                            <th>Id</th>
                            <th>Login Role</th>
                            <th>
                                <div class="datatableTdTitleTextWrapper">Profile</div>
                            </th>
                            <th>
                                <div class="datatableTdTitleTextWrapper">Gender</div>
                            </th>
                            <th>
                                <div class="datatableTdTitleTextWrapper">Phone</div>
                            </th>
                            <th>
                                <div class="datatableTdTitleTextWrapper">Location</div>
                            </th>
                            <th>
                                <div class="datatableTdTitleTextWrapper">Club</div>
                            </th>
                            <th>
                                <div class="datatableTdTitleTextWrapper">Ranked/Unranked</div>
                            </th>
                            <th>
                                <div class="datatableTdTitleTextWrapper">Reviews/Rating</div>
                            </th>
                            <th>
                                <div class="datatableTdTitleTextWrapper">Subscriptions</div>
                            </th>
                            <th>
                                <div class="datatableTdTextWrapper">Status</div>
                            </th>
                            <th>
                                <div class="datatableTdTextWrapper">Created UTC</div>
                            </th>
                            <th>
                                <div class="datatableTdTextWrapper">Action</div>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<input type="hidden" id="statusType" value="0" />

@*Rejection Reason modal*@
<div class="modal fade" id="rejection_reason_modal" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-overlay-title">Reason</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <textarea class="w-100 border-0" rows="4" id="reason" style="outline-style:none"></textarea>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*Profile Detail modal*@
<div class="modal fade" id="profile_detail_modal" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Profile Detail</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div>
                    <div><span class="font-14 font-bold">Level: </span><span id="level" class="ml-2"></span></div>
                    <div><span class="font-14 font-bold">Playing Tennis: </span><span id="playingTennis" class="ml-2"></span></div>
                    <div><span class="font-14 font-bold">Monthly Play Time: </span><span id="monthPlayTime" class="ml-2"></span></div>
                    <div><span class="font-14 font-bold">Dtb Performance: </span><span id="dtbPerformance" class="ml-2"></span></div>
                    <div><span class="font-14 font-bold">Radius: </span><span id="radius" class="ml-2"></span></div>
                    <div><span class="font-14 font-bold">Birthday: </span><span id="birthday" class="ml-2"></span></div>
                </div>
            </div>
        </div>
    </div>
</div>

@*Reviews Detail modal*@
<div class="modal fade" id="review_detail_modal" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Team Detail</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="trainer_detail" class="row">
                </div>
                <div id="listener_detail" class="row">
                </div>
            </div>
        </div>
    </div>
</div>



<div class="modal" id="subscriptionModal">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h3 class="modal-title">Purchased Subscription</h3>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->

            <div class="modal-body">

                <div class="">
                    <table id="subscriptionTable" class="table table-bordered table-responsive  dataTable">
                        <thead class="no-wrap">
                            <tr>
                                <th>Type</th>
                                <th>Title</th>
                                <th>Duration</th>
                                <th>Price Paid</th>
                                <th>Paid Content</th>
                                <th>Free Content</th>
                                <th>Score</th>
                                <th>Review</th>
                                <th>Match Balance</th>
                                <th>Match Rating</th>
                                <th>Total Ranked/Left Ranked</th>
                                <th>Total Unranked/Left Unranked</th>
                                <th>Purchased At</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody class="no-wrap" id="subscriptionTableBody">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
           $(function () {

               var columns = [
               {
                   "data": "id",
                   "name": "id"
               },
               {
                   "data": "loginRole",
                   "name": "loginRole"
               },
               {
                   "data": "name",
                   "name": "name",
                   "render": function (data, row, payload) {
                       var imageUrl = "";
                       if (CheckNullUndefined(payload.profilePic)) {
                           imageUrl = "/content/dist/img/no-image-available.png";
                       }
                       else {

                           imageUrl = payload.profilePic;
                       }
                       return  '<a class="text-decoration-underline cursor-pointer userInfo" data-userId="'+payload.id
                       +'" data-birthday="'+payload.dateOfBirth+'" data-level="'+payload.level+'" data-playTennis="'+payload.playingTennis+'" data-monthPlayTime="'+payload.monthPlayTime
                       +'" data-dtbPerformance="'+payload.dtbPerformanceClass+'" data-radius="'+payload.radius+'">'
                       + ' <div class="user-block" style="float: none!important;">'
                       + '     <img class="img-circle" src = "' + imageUrl + '">'
                       + '     <span class="username"> ' + data + '</span>'
                       + '     <span class="description"><i class="far fa-id-badge"></i> ' + payload.email + ' </span>'
                       + ' </div>'
                       + '</a>';
                   }
               },
               {
                   "data": "gender",
                   "name": "gender",
                    "render": function (data, row) {
                        if(data == 0)
                           return `<div>Male</div>`;
                        else
                           return `<div>Female</div`;
                   }
               },
               {
                   "data": "phone",
                   "name": "phone",
                   "render": function (data, row) {
                       return `<div class="datatableTdTextWrapper">${data}</div>`;
                   }
               },
               {
                   "data": "latitute",
                   "name": "latitute",
                   "render": function (data, row, payload) {
                        return '<a href="http://www.google.com/maps/place/' + data + ',' + payload.longitute + '" target="_blank"><i class="fas fa-map-marker-alt"></i></a>';

                   }
               },
               {
                   "data": "clubName",
                   "name": "clubName",
                   "render": function (data, row) {
                       if(data == null || data == ""){
                           return '<div class="datatableTdTitleTextWrapper"><span>---</span></div>';
                       }
                       else{
                           return '<div class="datatableTdTitleTextWrapper"><span>' + data + '</span></div>';
                       }
                   }
               },
               {
                   "data": "rankedMatches",
                   "name": "rankedMatches",
                   "render":  function (data, row, payload)  {
                           return '<div class="datatableTdTitleTextWrapper"><span>' + data + '</span>/<span>' + payload.unrankedMatches +'</span></div>'
                   }
               },
                {
                   "data": "reviewedPersonCount",
                   "name": "reviewedPersonCount",
                   "render":  function (data, row,payload)  {
                         //return  `<a class="btn btn-sm btn-outline-primary cursor-pointer userReview" data-userid="${data}"><i class="fas fa-star"></i></a>`;
                         return '<div class="datatableTdTitleTextWrapper"><span>' + payload.ratings + '</span></div>'
                   }
               },
               {
                   "data": "id",
                   "name": "id",
                   "render": function (data, row) {
                        return  `<a class="btn btn-sm btn-outline-primary cursor-pointer userSubscription" data-userid="${data}"><i class="fas fa-box"></i></a>`;
                   }
               },
               {
                   "data": "accountStatus",
                   "name": "accountStatus",
                   "render": function (data, row) {
                       if (data == 1) {
                           return '<div class="datatableTdTextWrapper"><span class="badge badge-success">Active</span></div>';
                       }
                       else if (data == 2) {
                           return '<div class="datatableTdTextWrapper"><span class="badge badge-danger">Blocked</span></div>';
                       }
                       else {
                           return '<div class="datatableTdTextWrapper">' + data + '</div>';

                       }
                   }
               },
               {
                   "data": "createdAtDateTime",
                   "name": "createdAtDateTime",
                   "render": function (data, row, payload) {
                       return '<div class="datatableTdTextWrapper">' + payload.createdAt + '</div>'
                   }
               },
               {
                   "data": "accountStatus",
                   "name": "accountStatus",
                   "render": function (data, row, payload)
                   {
                       if(data == 1){
                          return `<a class="btn btn-sm btn-outline-danger ml-2" id="softDeleteUserBtn"><i class="fas fa-user-slash"></i></a>`;
                       }
                       else if(data == 2){
                          return `<div class="dropdown show">
                                     <a class="btn dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                       <i class="fas fa-ellipsis-h"></i>
                                     </a>
                                     <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                        <a class="dropdown-item cursor-pointer" id="softDeleteUserBtn" title="Active"><i class="fas fa-user-check"></i> Active</a>
                                        <a data-detail="${payload.blockReason}" class="dropdown-item text-danger cursor-pointer" title="Reason" id="rejection_reason"><i class="fas fa-eye"></i> Reason</a>
                                     </div>
                                   </div>`;
                       }
                   }
               }
           ];
           var order = [[12, "desc"]];
           var columnDefs = [{
               "targets": [0,1],
               "visible": false,
               "searchable": false
           }];
           //Init Datatable
           initDatatable('#user_table', '/manage/getPaginationData/1', '#statusType', '#pageTitleFilter', columns, order, columnDefs);

       });


       //Soft Delete Feature Handler
       $('#user_table tbody').on('click', '[id*=softDeleteUserBtn]', function () {
           //Get Row Data
           var data = table.row($(this).parents('tr')).data();
           var title, confirmButtonText;

           var statusCheck = parseInt(data.accountStatus);

           if(statusCheck == 2){
               title = 'Are you sure, you want to unblock this user?';
               confirmButtonText = 'Yes, Unblock it!';
           }
           else{
               title = 'Are you sure, you want to block this user?';
               confirmButtonText = 'Yes, Block it!';
           }

           swal.fire({
               title: title,
               icon: 'warning',
               allowOutsideClick: false,
               showCloseButton: true,
               confirmButtonColor: '#3085d6',
               cancelButtonColor: '#d33',
               confirmButtonText: confirmButtonText
           }).then((result) => {
                   if (result.isConfirmed) {

                       if(statusCheck == 2){
                           //Ajax Request
                           loadHttpRequest("GET", "/manage/softDeleteUser?id="+data.id + "&isDeleted=" + statusCheck + "&reason=" + null +"&loginRole=" + data.loginRole, softDeleteCallback);
                       }
                       else{
                           rejectRequest(data.id,statusCheck, data.loginRole);
                       }
                   }
           });
       });

       async function rejectRequest(id, status, loginRole){
           await Swal.fire({
               input: 'textarea',
               inputLabel: 'Reason',
               inputPlaceholder: 'Type your reason here...',
               inputAttributes: {
               'aria-label': 'Type your reason here'
               },
               showCancelButton: true,
           }).then((result) => {
                   if (result.isConfirmed) {
                       if(result.value){
                            //Ajax Request
                            loadHttpRequest("GET", "/manage/softDeleteUser?id="+id + "&isDeleted=" + status + "&reason=" + result.value +"&loginRole=" + loginRole, softDeleteCallback);
                       }else{
                          toastr.error("Please provide reason to proceed.");
                          return false;
                       }
                   }
           });
       }

       function softDeleteCallback(response) {
           Swal.fire({
               title: 'Successfull',
               text: 'Status updated.',
               imageUrl: '/Images/Group 227317.png',
               imageAlt: 'Custom image',
               timer: 1500,
               showCancelButton: false,
               showConfirmButton: false
           }).then(function () {
               table.draw();
           })
       }

       $('#user_table tbody').on('click', '[class*=userInfo]', function () {

           var level = $(this).attr("data-level");
           var playingTennis = $(this).attr("data-playingTennis");
           var monthPlayTime = $(this).attr("data-monthPlayTime");
           var dtbPerformanceClass = $(this).attr("data-dtbPerformanceClass");
           var radius = $(this).attr("data-radius");
           var dob = $(this).attr("data-birthday");

           level = level == 0 ? "Starter": level == 1 ? "Beginner": level == 2 ? "LowerIntermediate":
           level == 3 ? "Intermediate" : level == 4 ? "UpperIntermediate" :  level == 5 ? "Advance":
           "Expert";

           playingTennis = playingTennis == 0 ? "LessThanSixMonths": playingTennis == 1 ? "SixMonthsToOneYear": playingTennis == 2 ? "OneYearToTwoYears":
           playingTennis == 3 ? "TwoToFourYears" : playingTennis == 4 ? "FourToSixYears" :  playingTennis == 5 ? "SixToEightYears":
           "EightYearsPlus";

           monthPlayTime = monthPlayTime == 0 ? "OneToTwoYears": monthPlayTime == 1 ? "TwoToFourYears": monthPlayTime == 2 ? "FourToEightYears":
           "EightPlusYears";

           dtbPerformanceClass = dtbPerformanceClass == 0 ? "MoreThanFive": dtbPerformanceClass == 1 ? "SevenPointFiveToFive": dtbPerformanceClass == 2 ? "TenToSevenPointFive":
           dtbPerformanceClass == 3 ? "FifteenToTen" : dtbPerformanceClass == 4 ? "TwentyToFifteen" :  dtbPerformanceClass == 5 ? "TwentyTwoToTwenty":
           "TwentyFiveToTwentyThree";


           $('#level').text(level);
           $('#playingTennis').text(playingTennis);
           $('#monthPlayTime').text(monthPlayTime);
           $('#dtbPerformance').text(dtbPerformanceClass);
           $('#radius').text(radius+"Km");
           $('#birthday').text(dob);

            $("#profile_detail_modal").modal('show');
       });


       //User Subscription
       $('#user_table tbody').on('click', '[class*=userSubscription]', function () {
          var userId = $(this).attr("data-userid");
          loadHttpRequest("GET", `/manage/getSubscriptionByUserDetail?userId=${userId}`, getSubscriptionCallBackHandler);
       });

       //handler ajax callback
       function getSubscriptionCallBackHandler(plans) {
           $('#subscriptionTable').DataTable().destroy();
           $("#subscriptionTableBody").html('');

           if (plans != null && plans.length > 0){

               plans.forEach(function (plan) {

                   var type = plan.subscriptionType == 0? "Freemium Plan":plan.subscriptionType == 1? "Premium Plan":
                   "Vip Plan";
                   var duration = plan.durationType == 0? "1 Day":plan.durationType == 1? "1 Week":
                   plan.durationType == 2? "1 Month":"1 Year";
                   var paidContent = plan.isPaidCouchingContentAvailable == true? "Available": "Not Available";
                   var freeContent = plan.isFreeCouchingContentAvailable == true? "Available": "Not Available";
                   var score = plan.isScoreAvailable == true? "Available": "Not Available";
                   var review = plan.isReviewAvailable == true? "Available": "Not Available";
                   var matchBalance = plan.isMatchBalanceAvailable == true? "Available": "Not Available";
                   var matchRating = plan.isRatingAvailable == true? "Available": "Not Available";
                   var status = plan.subscriptionPurchasedStatus == 0? `<span class="badge badge-success">Active</span>`: plan.subscriptionPurchasedStatus == 1? `<span class="badge badge-danger">Expired</span>`:
                   plan.subscriptionPurchasedStatus == 2? `<span class="badge badge-warning">Unsubscribed</span>`:plan.subscriptionPurchasedStatus == 3? `<span class="badge badge-danger">Deactive</span>`:
                   `<span class="badge badge-danger">Deactive</span>`;
                   var ranked = plan.isFreeRankedGameUnlimited == true ? `Unlimited`:  `${plan.freeRankedGames}/${plan.remainingFreeRankedMatches}`;
                   var unranked = plan.isFreeUnrankedGameUnlimited== true? `Unlimited`:  `${plan.freeUnrankedGames}/${plan.remainingFreeUnrankedMatches}`;
                  
                   var rowdata = `<tr>
                               <td>${type}</td>
                               <td>${plan.title}</td>
                               <td>${duration}</td>
                               <td>$${plan.priceAfterDiscount}</td>

                               <td>${paidContent}</td>
                               <td>${freeContent}</td>
                               <td>${score}</td>
                               <td>${review}</td>

                               <td>${matchBalance}</td>
                               <td>${matchRating}</td>
                               <td>${ranked}</td>
                               <td>${unranked}</td>

                               <td>${plan.created}</td>
                               <td>${status}</td>
                               </tr>`;

                               $("#subscriptionTableBody").append(rowdata);
               });

               var table = $('#subscriptionTable').DataTable();
                       $.fn.dataTable.ext.search.pop();
                       table.draw();
           }
           else{
                var table = $('#subscriptionTable').DataTable();
                       $.fn.dataTable.ext.search.pop();
                       table.draw();
           }

           $('#subscriptionModal').modal('show');
       }

       //User Reviews
       $('#user_table tbody').on('click', '[class*=userReview]', function () {
           var userId = $(this).attr("data-userid");
          loadHttpRequest("GET", `/manage/getReviewByUserDetail?userId=${userId}`, getReviewCallBackHandler);
       });

       //handler ajax callback
       function getReviewCallBackHandler(review) {
          $("#trainer_detail").html('');
          $("#listener_detail").html('');

           if (review != null && review.length > 0){
              $("#trainer_detail").append(`<div class="col-12 my-2"><h5>Team Leads</h5></div>`);
               review.forEach(function (trainer) {
                   var imageUrl = "";
                   if (CheckNullUndefined(trainer.profileImageUrl)) {
                      imageUrl = "/content/dist/img/no-image-available.png";
                   }
                   else {
                      imageUrl = trainer.profileImageUrl;
                   }

                   $("#trainer_detail").append(`<div class="col-md-4">
                          <div class="user-block" style="float: none!important;">
                               <img class="img-circle" src = "${imageUrl}">
                               <span class="username"><a class="table-link" id="linkMakerDetails"> ${trainer.name}</a></span>
                               <span class="description"><i class="far fa-id-badge"></i> ${trainer.uniqueCode} </span>
                          </div>
                   </div>`);
               });
           }
           else{
                 $("#trainer_detail").append(`<div class="col-12 my-2"><h4>No trainer found</h4></div>`);
           }

           $("#team_detail_modal").modal('show');
       }

       //Block Reason Handler
       $('#user_table tbody').on('click', '[id*=rejection_reason]', function () {
           //Get Row Data
           var data = $(this).attr("data-detail");
           $('#reason').html(data);
           $('#rejection_reason_modal').modal('show');
       });

</script>
