<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Admin</title>
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="~/Logo/Mini_logo.png">
    <!-- Custom css-->
    <link rel="stylesheet" href="~/content/dist/css/poppinsFont.css">
    <link rel="stylesheet" href="~/content/dist/css/montserrat.css">

    <link rel="stylesheet" href="~/content/plugins/fontawesome-free/css/all.min.css">
    <!-- Jquery-->
    <script src="~/content/plugins/jquery/jquery.min.js"></script>
    <script src="~/content/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>

    <link rel="stylesheet" href="~/content/plugins/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css">
    <link rel="stylesheet" href="~/content/plugins/toastr/toastr.min.css">


    <link rel="stylesheet" href="~/content/plugins/select2/css/select2.min.css">
    <link rel="stylesheet" href="~/content/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
    <!-- DataTables -->
    <link rel="stylesheet" href="~/content/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/content/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="~/content/plugins/summernote/summernote-bs4.min.css">
    <link rel="stylesheet" href="~/content/dist/css/adminlte.min2167.css?v=3.2.0">

    <!-- Custom css-->
    <link rel="stylesheet" href="~/content/dist/css/Custom.css" />
    <link rel="stylesheet" href="~/content/dist/css/CircleBlick.css" />
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

    <style>
      
           .height-fitContent{
        height:fit-content!important;
    }
        .font-07-rem {
            font-size: 0.7rem !important;
        }

        .nav-pills .nav-link.active, .nav-pills .show > .nav-link {
            color: #6CBA9E;
            background-color: white;
        }

        .nav-pills .nav-link {
            color: #ffffff;
        }

            .nav-pills .nav-link:not(.active):hover {
                color: white;
                background-color: #ffffff54;
            }

        .nav-bar-title {
            color: white;
            font-size: 0.7rem !important;
        }

        .loading {
            position: fixed;
            z-index: 999;
            height: 2em;
            width: 2em;
            overflow: show;
            margin: auto;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
        }

            /* Transparent Overlay */
            .loading:before {
                content: '';
                display: block;
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: radial-gradient(rgba(20, 20, 20,.8), rgba(0, 0, 0, .8));
                background: -webkit-radial-gradient(rgba(20, 20, 20,.8), rgba(0, 0, 0,.8));
            }

            /* :not(:required) hides these rules from IE9 and below */
            .loading:not(:required) {
                /* hide "loading..." text */
                font: 0/0 a;
                color: transparent;
                text-shadow: none;
                background-color: transparent;
                border: 0;
            }

                .loading:not(:required):after {
                    content: '';
                    display: block;
                    font-size: 10px;
                    width: 1em;
                    height: 1em;
                    margin-top: -0.5em;
                    -webkit-animation: spinner 150ms infinite linear;
                    -moz-animation: spinner 150ms infinite linear;
                    -ms-animation: spinner 150ms infinite linear;
                    -o-animation: spinner 150ms infinite linear;
                    animation: spinner 150ms infinite linear;
                    border-radius: 0.5em;
                    -webkit-box-shadow: rgba(255,255,255, 0.75) 1.5em 0 0 0, rgba(255,255,255, 0.75) 1.1em 1.1em 0 0, rgba(255,255,255, 0.75) 0 1.5em 0 0, rgba(255,255,255, 0.75) -1.1em 1.1em 0 0, rgba(255,255,255, 0.75) -1.5em 0 0 0, rgba(255,255,255, 0.75) -1.1em -1.1em 0 0, rgba(255,255,255, 0.75) 0 -1.5em 0 0, rgba(255,255,255, 0.75) 1.1em -1.1em 0 0;
                    box-shadow: rgba(255,255,255, 0.75) 1.5em 0 0 0, rgba(255,255,255, 0.75) 1.1em 1.1em 0 0, rgba(255,255,255, 0.75) 0 1.5em 0 0, rgba(255,255,255, 0.75) -1.1em 1.1em 0 0, rgba(255,255,255, 0.75) -1.5em 0 0 0, rgba(255,255,255, 0.75) -1.1em -1.1em 0 0, rgba(255,255,255, 0.75) 0 -1.5em 0 0, rgba(255,255,255, 0.75) 1.1em -1.1em 0 0;
                }

        /* Animation */

        @@-webkit-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @@-moz-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @@-o-keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @@keyframes spinner {
            0% {
                -webkit-transform: rotate(0deg);
                -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                -o-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        .page-item.active .page-link {
            z-index: 3;
            color: #fff;
            background-color: #6CBA9E;
            border-color: #6CBA9E;
        }
    </style>
</head>

<body class="sidebar-mini layout-fixed">
    <div class="wrapper">
        <div id="showLoaderApi"></div>
        <div class="preloader flex-column justify-content-center align-items-center">
            <img class="animation__shake" src="~/Logo/court-connect-logo.png" alt="Sales-fox Loader" height="50">
        </div>
        <!-- Top bar navigation partial-->
        <partial name="_TopNavigationPartial" />
        <!-- Top side navigation partial-->
        <partial name="_SidebarNavigationPartial" />
        <!-- Dynamic content body-->
        <div class="content-wrapper bg-white">
            <section class="content">
                @RenderBody()
            </section>
        </div>
    </div>
    <script src="~/content/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/content/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/content/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/content/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/content/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/content/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>

    <script src="~/content/plugins/toastr/toastr.min.js"></script>
    <script src="~/content/plugins/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/content/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/content/dist/js/adminlte2167.js?v=3.2.0"></script>
    <script src="~/content/plugins/summernote/summernote-bs4.min.js"></script>

    <script>
        $(function () {
            var url = window.location;
            // for single sidebar menu
            $('ul.nav-sidebar a').filter(function () {
                return this.href == url;
            }).addClass('active');

            // for sidebar menu and treeview
            $('ul.nav-treeview a').filter(function () {
                return this.href == url;
            }).parentsUntil(".nav-sidebar > .nav-treeview")
                .css({ 'display': 'block' })
                .addClass('menu-open').prev('a')
                .addClass('active');
        });

        var table;
        function initGeneralDatatable(tableId, url,  columns, order, columnDefs) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                })
                .DataTable({
                    fixedHeader: true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            // if error occured
                            console.error(xhr.statusText + xhr.responseText);
                        }
                        
                    },
                    "scrollY": 400,
                    "scrollX": true,
                    order: order,
                    "columnDefs": columnDefs,
                    "columns": columns
                });
        }
        function initDatatable(tableId, url, statusInputId, pageStatusTitleId, columns, order, columnDefs) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                })
                .DataTable({
                    fixedHeader: true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            // if error occured
                            console.error(xhr.statusText + xhr.responseText);
                        },
                        'data': function (data) {
                            // Read values
                            var status = $(statusInputId).val();

                            // Append to data
                            data.status = status;
                            var intStatus = parseInt(status);
                            if (intStatus == 0) {
                                $(pageStatusTitleId).html("All")
                            }
                            else if (intStatus == 1) {
                                $(pageStatusTitleId).html("Active")
                            }
                            else if(intStatus == 2){
                                $(pageStatusTitleId).html("Blocked")
                            }
                        }
                    },
                    "scrollY": 400,
                    "scrollX": true,
                    dom: 'Bfrtip',
                    order: order,
                    buttons: [
                        {
                            text: 'All',
                            className: 'mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("0");
                                table.draw();
                            }
                        },
                        {
                            text: 'Active',
                            className: 'btn-success mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("1");
                                table.draw();
                            }
                        },
                        {
                            text: 'Blocked',
                            className: 'btn-warning text-white mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("2");
                                table.draw();
                            }
                        },
                        {
                            text: 'Refresh',
                            className: 'btn-default mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                dt.clear().draw();
                                dt.ajax.reload();
                            }
                        }
                    ],
                    "columnDefs": columnDefs,
                    "columns": columns
                });
        }
        function initStadiumDatatable(tableId, url, statusInputId, pageStatusTitleId, columns, order, columnDefs) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                })
                .DataTable({
                    fixedHeader: true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            // if error occured
                            console.error(xhr.statusText + xhr.responseText);
                        },
                        'data': function (data) {
                            // Read values
                            var status = $(statusInputId).val();

                            // Append to data
                            data.status = status;
                            var intStatus = parseInt(status);
                            if (intStatus === 0) {
                                $(pageStatusTitleId).html("All")
                            }
                            else if (intStatus === 1) {
                                $(pageStatusTitleId).html("Approved")
                            }
                            else if(intStatus==2){
                                $(pageStatusTitleId).html("Pending")
                            }
                            else if (intStatus == 3) {
                                $(pageStatusTitleId).html("Rejected")
                            }
                        }
                    },
                    "scrollY": 400,
                    "scrollX": true,
                    dom: 'Bfrtip',
                    order: order,
                    buttons: [
                        {
                            text: 'All',
                            className: 'mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("0");
                                table.draw();
                            }
                        },
                        {
                            text: 'Approved',
                            className: 'btn-success mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("1");
                                table.draw();
                            }
                        },
                        {
                            text: 'Pending',
                            className: 'btn-warning mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("2");
                                table.draw();
                            }
                        },
                        {
                            text: 'Rejected',
                            className: 'btn-danger mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("3");
                                table.draw();
                            }
                        },
                        {
                            text: 'Refresh',
                            className: 'btn-default mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                dt.clear().draw();
                                dt.ajax.reload();
                            }
                        }
                    ],
                    "columnDefs": columnDefs,
                    "columns": columns
                });
        }
        function initDrillDatatable(tableId, url, statusInputId, pageStatusTitleId, columns, order, columnDefs) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                })
                .DataTable({
                    fixedHeader: true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            // if error occured
                            console.error(xhr.statusText + xhr.responseText);
                        },
                        'data': function (data) {
                            // Read values
                            var status = $(statusInputId).val();

                            // Append to data
                            data.status = status;
                            var intStatus = parseInt(status);
                            if (intStatus == 0) {
                                $(pageStatusTitleId).html("All")
                            }
                            else if (intStatus == 1) {
                                $(pageStatusTitleId).html("Active")
                            }
                            else if(intStatus == 2){
                                $(pageStatusTitleId).html("Inactive")
                            }
                            else if (intStatus == 3) {
                                $(pageStatusTitleId).html("Draft")
                            }
                            else if (intStatus == 4) {
                                $(pageStatusTitleId).html("Expired")
                            }
                        }
                    },
                    "scrollY": 400,
                    "scrollX": true,
                    dom: 'Bfrtip',
                    order: order,
                    buttons: [
                        {
                            text: 'All',
                            className: 'mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("0");
                                table.draw();
                            }
                        },
                        {
                            text: 'Active',
                            className: 'btn-success mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("1");
                                table.draw();
                            }
                        },
                        {
                            text: 'Inactive',
                            className: 'btn-primary mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("2");
                                table.draw();
                            }
                        },
                          {
                            text: 'Draft',
                            className: 'btn-warning text-white mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("3");
                                table.draw();
                            }
                        },
                        {
                            text: 'Expired',
                            className: 'btn-danger mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("4");
                                table.draw();
                            }
                        },
                        {
                            text: 'Refresh',
                            className: 'btn-default mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                dt.clear().draw();
                                dt.ajax.reload();
                            }
                        }
                    ],
                    "columnDefs": columnDefs,
                    "columns": columns
                });
        }
        //Simple table
        function initSimpleDatatable(tableId, url, columns, order, columnDefs) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

             table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                }).DataTable({
                fixedHeader: true,
                "filter": true,
                "ajax": {
                    "url": url,
                    "type": "GET",
                    "dataSrc": "result",
                    "error": function (xhr) {
                        // if error occured
                        console.error(xhr.statusText + xhr.responseText);
                    }
                },
                "scrollY": 400,
                "scrollX": true,
                 order: order,
                "columnDefs": columnDefs,
                "columns": columns
            });
        }

       //Match Detail Table
          function initMatchDatatable(tableId, url, statusInputId, pageStatusTitleId, columns, order, columnDefs) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                })
                .DataTable({
                    fixedHeader: true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            // if error occured
                            console.error(xhr.statusText + xhr.responseText);
                        },
                        'data': function (data) {
                            // Read values
                            var status = $(statusInputId).val();

                            // Append to data
                            data.status = status;
                            var intStatus = parseInt(status);
                            if (intStatus == 0) {
                                $(pageStatusTitleId).html("All")
                            }
                            else if (intStatus == 1) {
                                $(pageStatusTitleId).html("Pending")
                            }
                            else if(intStatus == 3){
                                $(pageStatusTitleId).html("Ready To Start")
                            }
                            else if (intStatus == 4) {
                                $(pageStatusTitleId).html("Started")
                            }
                            else if(intStatus == 5){
                                $(pageStatusTitleId).html("Completed")
                            }
                            else if (intStatus == 7) {
                                $(pageStatusTitleId).html("Cancelled")
                            }
                            else if(intStatus == 8){
                                $(pageStatusTitleId).html("Expired")
                            }
                            else if(intStatus == 10){
                                $(pageStatusTitleId).html("Active")
                            }
                            else if (intStatus == 11) {
                                $(pageStatusTitleId).html("Blocked")
                            }
                        }
                    },
                    "scrollY": 400,
                    "scrollX": true,
                    dom: 'Bfrtip',
                    order: order,
                    buttons: [
                        {
                            text: 'All',
                            className: 'mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("0");
                                table.draw();
                            }
                        },
                        {
                            text: 'Pending',
                            className: 'btn-secondary mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("1");
                                table.draw();
                            }
                        },
                        {
                            text: 'Ready To Start',
                            className: 'btn-primary text-white mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("3");
                                table.draw();
                            }
                        },
                        {
                            text: 'Started',
                            className: 'btn-success mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("4");
                                table.draw();
                            }
                        },
                        {
                            text: 'Completed',
                            className: 'btn-success text-white mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("5");
                                table.draw();
                            }
                        },
                        {
                            text: 'Cancelled',
                            className: 'btn-warning mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("7");
                                table.draw();
                            }
                        },
                        {
                            text: 'Expired',
                            className: 'btn-damger text-white mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("8");
                                table.draw();
                            }
                        },
                        {
                            text: 'Active',
                            className: 'btn-success mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("10");
                                table.draw();
                            }
                        },
                        {
                            text: 'Blocked',
                            className: 'btn-danger text-white mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("11");
                                table.draw();
                            }
                        },
                        {
                            text: 'Refresh',
                            className: 'btn-default mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                dt.clear().draw();
                                dt.ajax.reload();
                            }
                        }
                    ],
                    "columnDefs": columnDefs,
                    "columns": columns
                });
       }
       //Match Detail Table
          function initCouchingHubDatatable(tableId, url, statusInputId, pageStatusTitleId, columns, order, columnDefs) {

            if ($.fn.dataTable.isDataTable(tableId)) {
                $(tableId).dataTable().fnDestroy();
            }

            table = $(tableId)
                .on('processing.dt', function (e, settings, processing) {
                    if (processing) {
                        // console.log("internal processing");
                    }
                })
                .DataTable({
                    fixedHeader: true,
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            // if error occured
                            console.error(xhr.statusText + xhr.responseText);
                        },
                        'data': function (data) {
                            // Read values
                            var status = $(statusInputId).val();

                            // Append to data
                            data.status = status;
                            var intStatus = parseInt(status);
                            if (intStatus == 0) {
                                $(pageStatusTitleId).html("All")
                            }
                            else if (intStatus == 1) {
                                $(pageStatusTitleId).html("Free Content")
                            }
                            else if(intStatus == 2){
                                $(pageStatusTitleId).html("Paid Content")
                            }
                            else if(intStatus == 3){
                                $(pageStatusTitleId).html("Active")
                            }
                            else if (intStatus == 4) {
                                $(pageStatusTitleId).html("Blocked")
                            }
                        }
                    },
                    "scrollY": 400,
                    "scrollX": true,
                    dom: 'Bfrtip',
                    order: order,
                    buttons: [
                        {
                            text: 'All',
                            className: 'mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("0");
                                table.draw();
                            }
                        },
                        {
                            text: 'Free Content',
                            className: 'btn-secondary mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("1");
                                table.draw();
                            }
                        },
                        {
                            text: 'Paid Content',
                            className: 'btn-primary text-white mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("2");
                                table.draw();
                            }
                        },
                        {
                            text: 'Active',
                            className: 'btn-success mr-2 mb-2',
                            action: function (e, dt, node, config) {

                                $(statusInputId).val("3");
                                table.draw();
                            }
                        },
                        {
                            text: 'Blocked',
                            className: 'btn-danger text-white mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                $(statusInputId).val("4");
                                table.draw();
                            }
                        },
                        {
                            text: 'Refresh',
                            className: 'btn-default mr-2 mb-2',
                            action: function (e, dt, node, config) {
                                dt.clear().draw();
                                dt.ajax.reload();
                            }
                        }
                    ],
                    "columnDefs": columnDefs,
                    "columns": columns
                });
        }
    </script>
    <script>
        const loaderDiv = document.getElementById('showLoaderApi');
        var Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        function loadHttpRequest(method, url, cFunction, params) {
            loaderDiv.innerHTML = '<div class="loading">Loading&#8230;</div>';
            var xhttp;
            xhttp = new XMLHttpRequest();

            xhttp.addEventListener("load", transferComplete);
            xhttp.addEventListener("error", transferFailed);
            xhttp.addEventListener("abort", transferCanceled);

            xhttp.onreadystatechange = function () {

                if (this.readyState == 4 && this.status == 200) {
                    const objModel = JSON.parse(this.responseText);
                    if (objModel.status) {
                        cFunction(objModel.result)
                    }
                    else {
                        toastr.error(objModel.result)
                    }
                }
            };
            xhttp.open(method, url, true);
            xhttp.setRequestHeader("Content-type", "application/json");
            xhttp.send(params);
        }
        function transferComplete(evt) {
            var response = JSON.parse(evt.currentTarget.responseText);

            if (!response.status) {
                toastr.error(response.result)
            }
            else if (response.status != 200) {
                if (response.errors != null) {
                    toastr.error(JSON.stringify(response.errors));
                }

            }
            else {
                console.error("Error! ", JSON.parse(evt.currentTarget.responseText));
            }
            loaderDiv.innerHTML = '';
        }
        function transferFailed(evt) {
            console.error("transferFailed", JSON.parse(evt.currentTarget.responseText));
            var response = JSON.parse(evt.currentTarget.responseText);

            if (!response.status) {
                toastr.error(response.result)
            }
        }
        function transferCanceled(evt) {
            console.error("transferCanceled", JSON.parse(evt.currentTarget.responseText));

            var response = JSON.parse(evt.currentTarget.responseText);

            if (!response.status) {
                toastr.error(response.result)
            }
        }
    </script>
    <script>
         function retureDayName(index) {
            switch (index) {
                case 1:
                    return "Monday"
                case 2:
                    return "Tuesday"
                case 3:
                    return "Wednesday"
                case 4:
                    return "Thursday"
                case 5:
                    return "Friday"
                case 6:
                    return "Saturday"
                case 7:
                    return "Sunday"
                default:
                    return "N/A"
            }
        }
        function tConvert(time) {
            // Check correct time format and split into components
            time = time.toString().match(/^([01]\d|2[0-3])(:)([0-5]\d)(:[0-5]\d)?$/) || [time];

            if (time.length > 1) { // If time format correct
                time = time.slice(1);  // Remove full string match value
                time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM
                time[0] = +time[0] % 12 || 12; // Adjust hours
            }
            return time.join(''); // return adjusted time or original string
        }
        function CheckNullUndefined(value) {
            return typeof value == 'string' && !value.trim() || typeof value == 'undefined' || value === null;
        }
    </script>
</body>

</html>